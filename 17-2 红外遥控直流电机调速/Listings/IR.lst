C51 COMPILER V9.59.0.0   IR                                                                10/24/2022 22:03:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IR
OBJECT MODULE PLACED IN .\Objects\IR.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE IR.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\IR.lst
                    -) OBJECT(.\Objects\IR.obj)

line level    source

   1          #include <REGX52.H>
   2          #include "Int0.h"
   3          #include "Timer0.h"
   4          
   5          unsigned int IR_Time;
   6          unsigned char IR_State;
   7          
   8          unsigned char IR_Data[4];
   9          unsigned char IR_pData;
  10          
  11          unsigned char IR_DataFlag;
  12          unsigned char IR_RepeatFlag;
  13          unsigned char IR_Address;
  14          unsigned char IR_Command;
  15          
  16          
  17          void IR_Init()
  18          {
  19   1              Int0_Init();
  20   1              Timer0_Init();
  21   1      }
  22          
  23          unsigned char IR_GetAddress()
  24          {
  25   1      
  26   1              return IR_Address;
  27   1      }
  28          
  29          unsigned char IR_GetCommand()
  30          {
  31   1              return IR_Command;
  32   1      }
  33          
  34          unsigned char IR_GetDataFlag()
  35          {
  36   1              if(IR_DataFlag == 1)
  37   1              {
  38   2                      IR_DataFlag = 0;
  39   2                      return 1;
  40   2              }
  41   1              return 0;
  42   1      }
  43          unsigned char IR_GetRepeatFlag()
  44          {
  45   1              if(IR_RepeatFlag == 1)
  46   1              {
  47   2                      IR_RepeatFlag = 0;
  48   2                      return 1;
  49   2              }
  50   1              return 0;
  51   1      }
  52          
  53          void Int0_Routine(void) interrupt 0
  54          {
C51 COMPILER V9.59.0.0   IR                                                                10/24/2022 22:03:16 PAGE 2   

  55   1              if(IR_State == 0)
  56   1              {
  57   2                      
  58   2                      Timew0_SetCount(0);
  59   2                      Timer0_Run(1);
  60   2                      IR_State = 1;
  61   2              }
  62   1              else if(IR_State == 1)
  63   1              {
  64   2                      
  65   2                      IR_Time = Timew0_GetCount();
  66   2                      Timew0_SetCount(0);
  67   2                      if(IR_Time > 12442-500 && IR_Time < 12440+500)
  68   2                      {       
  69   3                              
  70   3                              IR_State = 2;
  71   3                      }
  72   2                      else if(IR_Time > 10368-500 && IR_Time < 10368+500)
  73   2                      {
  74   3                              IR_RepeatFlag = 1;
  75   3                              Timer0_Run(0);
  76   3                              IR_State = 0;
  77   3                      }
  78   2                      else
  79   2                      {
  80   3                              IR_State = 1;
  81   3                      }                       
  82   2              }
  83   1              else if(IR_State == 2)
  84   1              {
  85   2                      
  86   2                      IR_Time = Timew0_GetCount();
  87   2                      Timew0_SetCount(0);
  88   2                      if(IR_Time > 1032-500 && IR_Time < 1032+500)
  89   2                      {       
  90   3                              
  91   3                              IR_Data[IR_pData/8]&=~(0x01<<(IR_pData%8));
  92   3                              IR_pData++;
  93   3                      }
  94   2                      else if(IR_Time > 2074-500 && IR_Time < 2074+500)
  95   2                      {       
  96   3                              IR_Data[IR_pData/8]|=(0x01<<(IR_pData%8));
  97   3                              IR_pData++;
  98   3                      }
  99   2                      else
 100   2                      {
 101   3                              IR_pData = 0;
 102   3                              IR_State = 1;
 103   3                      }
 104   2                      if(IR_pData >=32)
 105   2                      {
 106   3      
 107   3                              IR_pData = 0;
 108   3                              if((IR_Data[0]==~IR_Data[1]) && (IR_Data[2]==~IR_Data[3]))
 109   3                              {
 110   4                                      IR_Address = IR_Data[0];
 111   4                                      IR_Command = IR_Data[2];
 112   4                                      IR_DataFlag = 1;
 113   4                              }
 114   3                              Timer0_Run(0);
 115   3                              IR_State = 0;
 116   3                      }
C51 COMPILER V9.59.0.0   IR                                                                10/24/2022 22:03:16 PAGE 3   

 117   2              }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    374    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
